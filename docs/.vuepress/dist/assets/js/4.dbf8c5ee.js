(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{246:function(t,s,a){t.exports=a.p+"assets/img/position.4671619b.svg"},247:function(t,s,a){t.exports=a.p+"assets/img/thousands.988b45fa.png"},252:function(t,s,a){"use strict";a.r(s);var n=a(28),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"正则表达式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[t._v("#")]),t._v(" 正则表达式")]),t._v(" "),n("p"),n("div",{staticClass:"table-of-contents"},[n("ul",[n("li",[n("a",{attrs:{href:"#创建regexp对象"}},[t._v("创建RegExp对象")]),n("ul",[n("li",[n("a",{attrs:{href:"#_1-直接量语法"}},[t._v("1 直接量语法")])]),n("li",[n("a",{attrs:{href:"#_2-regexp构造函数"}},[t._v("2 RegExp构造函数")])]),n("li",[n("a",{attrs:{href:"#_3-修饰符"}},[t._v("3 修饰符")])])])]),n("li",[n("a",{attrs:{href:"#匹配字符"}},[t._v("匹配字符")]),n("ul",[n("li",[n("a",{attrs:{href:"#_1-字符类"}},[t._v("1 字符类")])]),n("li",[n("a",{attrs:{href:"#_2-重复"}},[t._v("2 重复")])]),n("li",[n("a",{attrs:{href:"#_3-选择"}},[t._v("3 选择")])]),n("li",[n("a",{attrs:{href:"#_4-分组"}},[t._v("4 分组")])])])]),n("li",[n("a",{attrs:{href:"#匹配位置"}},[t._v("匹配位置")]),n("ul",[n("li",[n("a",{attrs:{href:"#_1-锚字符"}},[t._v("1 锚字符")])])])]),n("li",[n("a",{attrs:{href:"#实际案例"}},[t._v("实际案例")]),n("ul",[n("li",[n("a",{attrs:{href:"#_1-数字的千分位分隔符"}},[t._v("1 数字的千分位分隔符")])]),n("li",[n("a",{attrs:{href:"#_2-获取url参数"}},[t._v("2 获取url参数")])]),n("li",[n("a",{attrs:{href:"#_3-获取url-query对象"}},[t._v("3 获取url query对象")])])])]),n("li",[n("a",{attrs:{href:"#附录"}},[t._v("附录")])])])]),n("p"),t._v(" "),n("h2",{attrs:{id:"创建regexp对象"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建regexp对象"}},[t._v("#")]),t._v(" 创建RegExp对象")]),t._v(" "),n("p",[t._v("JavaScript的正则表达式是通过 "),n("strong",[t._v("RegExp")]),t._v(" 对象来表示的，而创建 "),n("strong",[t._v("RegExp")]),t._v(" 对象有两种方式：")]),t._v(" "),n("h3",{attrs:{id:"_1-直接量语法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-直接量语法"}},[t._v("#")]),t._v(" 1 直接量语法")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" pattern "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d+/")]),t._v("\n")])])]),n("h3",{attrs:{id:"_2-regexp构造函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-regexp构造函数"}},[t._v("#")]),t._v(" 2 RegExp构造函数")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" pattern "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\\\d+"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'g'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h3",{attrs:{id:"_3-修饰符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-修饰符"}},[t._v("#")]),t._v(" 3 修饰符")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("i")]),t._v(": 匹配不区分大小写")]),t._v(" "),n("li",[n("code",[t._v("g")]),t._v(": 执行全局匹配，会找到所有的匹配")]),t._v(" "),n("li",[n("code",[t._v("m")]),t._v(": 多行匹配，其中 "),n("code",[t._v("^")]),t._v(" 匹配行开头，"),n("code",[t._v("$")]),t._v(" 匹配行结尾")])]),t._v(" "),n("p",[t._v("通常都可以使用"),n("strong",[t._v("直接量语法")]),t._v("来创建正则表达式，因为"),n("strong",[t._v("直接量语法")]),t._v("写法相对简短一些。而通过 "),n("strong",[t._v("RegExp()")]),t._v(" 构造函数创建适合于需要动态创建正则表达式，正则表达式的主体部分是不确定的情况。")]),t._v(" "),n("p",[n("a",{attrs:{href:"#_2-%E8%8E%B7%E5%8F%96url%E5%8F%82%E6%95%B0"}},[t._v("获取url参数--RegExp构造函数创建动态正则表达式")])]),t._v(" "),n("h2",{attrs:{id:"匹配字符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#匹配字符"}},[t._v("#")]),t._v(" 匹配字符")]),t._v(" "),n("h3",{attrs:{id:"_1-字符类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-字符类"}},[t._v("#")]),t._v(" 1 字符类")]),t._v(" "),n("p",[n("strong",[t._v("字符类")]),t._v("表示的是匹配"),n("strong",[t._v("字符类")]),t._v("中的字符之一，使用"),n("code",[t._v("[]")]),t._v("来定义字符类")]),t._v(" "),n("p",[t._v("使用正则的字符类去匹配字符串有时可以减少 "),n("code",[t._v("||")]),t._v(" 运算符。")]),t._v(" "),n("p",[t._v("例如，判断一个数据的状态是否等于“1”，或等于“2”，或等于“3”的话，就可以使用字符类来实现，当然也可以定义数组来判断")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" status "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/[123]/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("status"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),n("h4",{attrs:{id:"_1-1-否定字符类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-否定字符类"}},[t._v("#")]),t._v(" 1.1 否定字符类")]),t._v(" "),n("p",[t._v("同时呢还有否定字符类，表示匹配的内容不能包含"),n("strong",[t._v("字符类")]),t._v("的字符，否定字符类使用"),n("code",[t._v("[^]")]),t._v("来表示")]),t._v(" "),n("p",[t._v("使用否定字符类去匹配字符串有时可以减少 "),n("code",[t._v("&&")]),t._v(" 运算符。")]),t._v(" "),n("p",[t._v("例如，判断一个数据的状态是否不等于“1”，且不等于“2”，且不等于“3”的话，就可以使用字符类来实现，当然也可以定义数组来判断")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" status "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/[^123]/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("status"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),n("h4",{attrs:{id:"_1-2-字符类范围"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-字符类范围"}},[t._v("#")]),t._v(" 1.2 字符类范围")]),t._v(" "),n("p",[t._v("对于字符类的字符较多的情况下可以使用连字符 "),n("code",[t._v("-")]),t._v(" 来简写，当然他们必须是连着的字符")]),t._v(" "),n("p",[t._v("比如 "),n("code",[t._v("[abcdef]")]),t._v(" 可以改为 "),n("code",[t._v("[a-f]")])]),t._v(" "),n("h4",{attrs:{id:"_1-3-常用字符类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-常用字符类"}},[t._v("#")]),t._v(" 1.3 常用字符类")]),t._v(" "),n("p",[t._v("由于某些字符类非常常用，因此JavaScript的正则表达式语法使用一些特殊字符的转义字符来表示")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("\\d")]),t._v(" === "),n("code",[t._v("[0-9]")]),t._v(": 表示数字，是 "),n("strong",[t._v("digit")]),t._v(" 的简写")]),t._v(" "),n("li",[n("code",[t._v("\\D")]),t._v(" === "),n("code",[t._v("[^0-9]")]),t._v(": 表示除数字外的任意字符")]),t._v(" "),n("li",[n("code",[t._v("\\w")]),t._v(" === "),n("code",[t._v("[0-9a-zA-Z_]")]),t._v(": 表示数字、大小写字母及下划线，是 "),n("strong",[t._v("word")]),t._v(" 的简写")]),t._v(" "),n("li",[n("code",[t._v("\\W")]),t._v(" === "),n("code",[t._v("[^0-9a-zA-Z_]")]),t._v(": 表示非单词字符")]),t._v(" "),n("li",[n("code",[t._v("\\s")]),t._v(" === "),n("code",[t._v("[\\t\\v\\n\\r\\f]")]),t._v(": 表示空白符（包括空格、水平制表符、垂直制表符、换行符、回车符或换页符），是 "),n("strong",[t._v("space character")]),t._v(" 的简写")]),t._v(" "),n("li",[n("code",[t._v("\\S")]),t._v(" === "),n("code",[t._v("[^\\t\\v\\n\\r\\f]")]),t._v(": 非空白符")]),t._v(" "),n("li",[n("code",[t._v(".")]),t._v(" === "),n("code",[t._v("[^\\n\\r\\u2028\\u2029]")]),t._v(": 表示除换行符、回车符、行分隔符和段分隔符外的任意字符")])]),t._v(" "),n("p",[t._v("若想匹配任意字符，可使用 "),n("code",[t._v("[\\d\\D]")]),t._v("、"),n("code",[t._v("[\\w\\W]")]),t._v("、"),n("code",[t._v("[\\s\\S]")]),t._v("或"),n("code",[t._v("[^]")]),t._v(" 来匹配")]),t._v(" "),n("h3",{attrs:{id:"_2-重复"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-重复"}},[t._v("#")]),t._v(" 2 重复")]),t._v(" "),n("h4",{attrs:{id:"_2-1-重复字符表示"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-重复字符表示"}},[t._v("#")]),t._v(" 2.1 重复字符表示")]),t._v(" "),n("ul",[n("li",[n("p",[n("code",[t._v("{n,m}")]),t._v(" 表示匹配字符最少n次，最多m次")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("{n}")]),t._v(" 表示匹配字符n次")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("{n,}")]),t._v(" 表示匹配字符n次或更多次")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("?")]),t._v(" === "),n("code",[t._v("{0,1}")]),t._v(" 表示匹配字符0次或1次")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("+")]),t._v(" === "),n("code",[t._v("{1,}")]),t._v(" 表示匹配字符1次或多次")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("*")]),t._v(" === "),n("code",[t._v("{0,}")]),t._v(" 表示匹配字符0次或多次")])])]),t._v(" "),n("h4",{attrs:{id:"_2-2-非贪婪匹配"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-非贪婪匹配"}},[t._v("#")]),t._v(" 2.2 非贪婪匹配")]),t._v(" "),n("p",[t._v("上面的匹配重复字符都是贪婪匹配，他们会尽可能多地匹配，比如 "),n("code",[t._v("/\\d{2,3}/g")]),t._v(" 就会尽可能的匹配3个字符")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" string "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123 3454 789'")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d{2,3}/g")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["123", "345", "789"]')]),t._v("\n")])])]),n("p",[t._v("而非贪婪匹配则是在重复字符后面加上 "),n("code",[t._v("?")]),t._v(" 实现的，比如 "),n("code",[t._v("{2,3}?")]),t._v("、"),n("code",[t._v("*?")]),t._v(" 等等")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" string "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123 3454 789'")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d{2,3}?/g")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["12", "34", "54", "78"]')]),t._v("\n")])])]),t._v(" "),n("h3",{attrs:{id:"_3-选择"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-选择"}},[t._v("#")]),t._v(" 3 选择")]),t._v(" "),n("p",[t._v("使用字符 "),n("code",[t._v("|")]),t._v(" 来分隔可选择的字符，也就是 “或” 的意思。例如 "),n("code",[t._v("/jpg|png|jpng/")]),t._v(' 即可匹配 "jpg"，也可匹配"png"，还可匹配 "jpng" 字符串')]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),n("p",[n("strong",[t._v("注意")]),t._v(" 选择项的尝试匹配次序是从左到右，也就是说如果左边的选择项匹配了，就会忽略右边的选择项，即使右边的选择项更匹配。例如当正则表达式 "),n("code",[t._v("/java|javaScript/")]),t._v(' 去匹配字符串 "javaScript" 时，它只能匹配第一个字符，即 "java"')])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" string "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'javaScript'")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/java|javaScript/g")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["java"]')]),t._v("\n")])])]),n("p",[t._v("若想尽可能的更好的匹配，可将更好的匹配字符放在左边")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" string "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'javaScript'")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v('/javaScript|java"/g')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["javaScript"]')]),t._v("\n")])])]),n("h3",{attrs:{id:"_4-分组"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-分组"}},[t._v("#")]),t._v(" 4 分组")]),t._v(" "),n("p",[t._v("分组是通过 "),n("code",[t._v("()")]),t._v(" 来实现的，而在正则中括号有三个作用："),n("strong",[t._v("组合")]),t._v("、"),n("strong",[t._v("引用分组")]),t._v("和"),n("strong",[t._v("反向引用")])]),t._v(" "),n("h4",{attrs:{id:"_4-1-组合"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-组合"}},[t._v("#")]),t._v(" 4.1 组合")]),t._v(" "),n("p",[t._v("用括号将单独的项"),n("strong",[t._v("组合")]),t._v("成子表达式，以便可以像处理一个独立的单元那样用 "),n("code",[t._v("|")]),t._v("、"),n("code",[t._v("*")]),t._v("、"),n("code",[t._v("?")]),t._v("、"),n("code",[t._v("+")]),t._v(" 等来对单元内的项进行处理。")]),t._v(" "),n("p",[t._v('例如如果想匹配一至多个 "ab" 这样的组合项，需要使用 '),n("code",[t._v("/(ab)+/")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ababab'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/ab+/g")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["ab", "ab", "ab"]')]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ababab'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(ab)+/g")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["ababab"]')]),t._v("\n")])])]),n("h4",{attrs:{id:"_4-2-引用分组"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-引用分组"}},[t._v("#")]),t._v(" 4.2 引用分组")]),t._v(" "),n("p",[t._v("引用分组指的是我们可以引用 "),n("code",[t._v("()")]),t._v(" 内的子表达式匹配到的文本，以此来实现正则表达式的检索与替换操作")]),t._v(" "),n("h5",{attrs:{id:"_4-2-1-替换"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-1-替换"}},[t._v("#")]),t._v(" 4.2.1 替换")]),t._v(" "),n("p",[t._v("引用分组经常用于替换操作中，当字符串的 "),n("code",[t._v("replace")]),t._v(" 方法的第一个参数为正则表达式时，第二个参数可以通过 "),n("code",[t._v("$1")]),t._v("、"),n("code",[t._v("$2")]),t._v("、"),n("code",[t._v("...")]),t._v("、"),n("code",[t._v("$9")]),t._v(" 来引用第一个参数的正则表达式的分组。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" string "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'javascript'")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(script)/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-$1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// java-script")]),t._v("\n")])])]),n("p",[t._v("其中，"),n("code",[t._v("replace")]),t._v(" 的第二个参数还可以是一个函数")]),t._v(" "),n("p",[t._v("具体实例可参考 "),n("a",{attrs:{href:"#_3-%E8%8E%B7%E5%8F%96url-query%E5%AF%B9%E8%B1%A1"}},[t._v("获取url-query对象")])]),t._v(" "),n("h5",{attrs:{id:"_4-2-2-数据引用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-2-数据引用"}},[t._v("#")]),t._v(" 4.2.2 数据引用")]),t._v(" "),n("p",[t._v("string 的 "),n("code",[t._v("match")]),t._v(" 和 regexp 的 "),n("code",[t._v("exec")]),t._v(" 也可在匹配的结果中引用分组匹配的文本")]),t._v(" "),n("p",[t._v("例如，提取日期的年月日")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" regex "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(\\d{4})-(\\d{2})-(\\d{2})/")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2020'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["2020-03-30", "2020", "03", "30", index: 0, input: "2020-03-30", groups: undefined]')]),t._v("\n")])])]),n("p",[t._v("字符串的 "),n("code",[t._v("match")]),t._v(" 方法返回一个数组，其中第一个元素是整体匹配结果，然后是各个引用分组匹配的结果。倘若正则表达式有修饰符 "),n("code",[t._v("g")]),t._v("，则返回的数组是各个引用分组匹配的结果。正则对象的 "),n("code",[t._v("exec")]),t._v(" 方法与 字符串的 "),n("code",[t._v("match")]),t._v(" 匹配的结果一样")]),t._v(" "),n("h4",{attrs:{id:"_4-3-反向引用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-反向引用"}},[t._v("#")]),t._v(" 4.3 反向引用")]),t._v(" "),n("p",[n("strong",[t._v("反向引用")]),t._v("指的是可以在同一正则表达式的后部引用前面的子表达式（也就是圆括号内的子表达式）匹配到的字符串，是通过在 "),n("code",[t._v("\\")]),t._v(" 后加一位或多位数字来实现的。其中数字对应圆括号的子表达式在正则表达式中的位置")]),t._v(" "),n("p",[t._v("例如 "),n("code",[t._v("\\1")]),t._v(" 表示正则表达式中从左到右第1个圆括号的子表达式匹配到的文本，以此类推，"),n("code",[t._v("\\9")]),t._v(" 表示第9个圆括号的子表达式匹配到的文本")]),t._v(" "),n("p",[t._v("以下例子用来测试日期格式是否正确，其中正则表达式的 \\1 可以引用前面的括号匹配到的文本来保证日期的连接符是一致的")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" regex "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d{4}(-|\\/|\\.)\\d{2}\\1\\d{2}/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" regex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020-03-30"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" regex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020/03/30"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" regex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020.03.30"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" regex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2020-03/30"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),t._v(" "),n("h2",{attrs:{id:"匹配位置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#匹配位置"}},[t._v("#")]),t._v(" 匹配位置")]),t._v(" "),n("p",[t._v("位置匹配是指匹配字符之间的位置，而不是实际的字符")]),t._v(" "),n("p",[n("img",{attrs:{src:a(246),alt:"位置"}})]),t._v(" "),n("h3",{attrs:{id:"_1-锚字符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-锚字符"}},[t._v("#")]),t._v(" 1 锚字符")]),t._v(" "),n("p",[t._v("在正则表达式中匹配位置的字符由于可以匹配字符串的特定位置，因此也被称为锚字符。")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("^")]),t._v(" : 匹配开头，在多行匹配中匹配行开头")]),t._v(" "),n("li",[n("code",[t._v("$")]),t._v(" : 匹配结尾，在多行匹配中匹配行结尾")]),t._v(" "),n("li",[n("code",[t._v("\\b")]),t._v(" : 匹配单词的边界，具体就是 "),n("code",[t._v("\\w")]),t._v(" 和 "),n("code",[t._v("\\W")]),t._v(" 、"),n("code",[t._v("\\w")]),t._v(" 和 "),n("code",[t._v("^")]),t._v(" 以及 "),n("code",[t._v("\\w")]),t._v(" 和 "),n("code",[t._v("$")]),t._v(" 之间的位置")]),t._v(" "),n("li",[n("code",[t._v("\\B")]),t._v(" : 匹配非单词边界，也就是除了 "),n("code",[t._v("\\b")]),t._v(" 匹配的位置外的所有位置")]),t._v(" "),n("li",[n("code",[t._v("(?:p)")]),t._v(" : 正向先行断言，要求接下来的字符要与 "),n("code",[t._v("p")]),t._v(" 匹配，可以理解为模式 "),n("code",[t._v("p")]),t._v(" 前面的位置")]),t._v(" "),n("li",[n("code",[t._v("(?!p)")]),t._v(" : 反向先行断言，要求接下来的字符不与 "),n("code",[t._v("p")]),t._v(" 匹配")])]),t._v(" "),n("p",[t._v("所有匹配的位置都是可以被替换的")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" string "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello world'")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/^|$/g")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// #hello world#")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\b/g")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// #hello# #world#")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\B/g")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// h#e#l#l#o w#o#r#l#d")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?=llo)/g")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// he#llo world")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?!=llo)/g")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// #h#el#l#o# #w#o#r#l#d#")]),t._v("\n")])])]),n("h2",{attrs:{id:"实际案例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实际案例"}},[t._v("#")]),t._v(" 实际案例")]),t._v(" "),n("h3",{attrs:{id:"_1-数字的千分位分隔符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-数字的千分位分隔符"}},[t._v("#")]),t._v(" 1 数字的千分位分隔符")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1234567.12'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?=(\\d{3})+\\b)/g")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1,234,567.12")]),t._v("\n")])])]),n("ul",[n("li",[n("code",[t._v("(\\d{3})")]),t._v(" 表示匹配3个数字。例如 "),n("code",[t._v("123")]),t._v("，"),n("code",[t._v("456")])]),t._v(" "),n("li",[n("code",[t._v("(\\d{3}+)")]),t._v(" 表示匹配的数字个数是3的整数倍。例如 "),n("code",[t._v("123456")]),t._v("，"),n("code",[t._v("456")])]),t._v(" "),n("li",[n("code",[t._v("(\\d{3}+\\b)")]),t._v(" 表示匹配的数字个数是3的整数倍且后面是单词边界（若有小数点，小数点后面的数字不匹配）。例如 "),n("code",[t._v("234567.")]),t._v("，"),n("code",[t._v("567.")])]),t._v(" "),n("li",[n("code",[t._v("(?=(\\d{3}+\\b))")]),t._v(" 表示匹配的数字个数是3的整数倍且后面单词边界前面的位置。例如 "),n("code",[t._v("234567.")]),t._v(" 前面的位置，"),n("code",[t._v("567.")]),t._v("前面的位置")])]),t._v(" "),n("p",[t._v("最后只要将匹配的位置替换为 "),n("code",[t._v(",")]),t._v(" 即可")]),t._v(" "),n("p",[t._v("但是如果整数的个数是3的倍数时就会有点问题")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123456789.12'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?=(\\d{3})+\\b)/g")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ,123,456,789.12")]),t._v("\n")])])]),n("p",[t._v("说明匹配到的位置不能是开头，所以使用 "),n("code",[t._v("(?!^)")]),t._v(" 来限制")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123456789.12'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?!^)(?=(\\d{3})+\\b)/g")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 123,456,789.12")]),t._v("\n")])])]),n("p",[t._v("也可以用 "),n("code",[t._v("\\B")]),t._v(" 来代替 "),n("code",[t._v("(?!^)")]),t._v(" ，因为 "),n("code",[t._v("\\B")]),t._v(" 也可以匹配非开头位置")]),t._v(" "),n("p",[t._v("所以最终的正则表达式可改为:")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123456789.12'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\B(?=(\\d{3})+\\b)/g")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 123,456,789.12")]),t._v("\n")])])]),n("p",[t._v("可以看看可视图的正则")]),t._v(" "),n("p",[n("img",{attrs:{src:a(247),alt:"千分位正则可视图"}})]),t._v(" "),n("h3",{attrs:{id:"_2-获取url参数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-获取url参数"}},[t._v("#")]),t._v(" 2 获取url参数")]),t._v(" "),n("p",[t._v("使用 "),n("code",[t._v("RegExp()")]),t._v(" 构造函数构建动态正则表达式")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getQueryParam")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("key")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'(^|&)'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" key "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'=([^&]*)(&|$)'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'i'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("search"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("substr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("decodeURIComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getQueryParam")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'userid'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("ul",[n("li",[n("code",[t._v("(^|&)")]),t._v(" 匹配参数字符串的开头或 "),n("code",[t._v("&")]),t._v(" 字符")]),t._v(" "),n("li",[n("code",[t._v("([^&]*)")]),t._v(" 匹配非 "),n("code",[t._v("&")]),t._v(" 的多个任意字符，此处匹配的是 "),n("code",[t._v("key")]),t._v(" 对应的值，它会出现在匹配结果的第三项")]),t._v(" "),n("li",[n("code",[t._v("(&|$)")]),t._v(" 匹配 "),n("code",[t._v("&")]),t._v(" 字符或结尾")])]),t._v(" "),n("h3",{attrs:{id:"_3-获取url-query对象"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-获取url-query对象"}},[t._v("#")]),t._v(" 3 获取url query对象")]),t._v(" "),n("p",[t._v("若想获取所有的URL参数对象可使用以下方法")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getQuery")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(^|&)([^=]*)=([^&]*)/ig")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" string "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("search"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("substr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("match"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("decodeURIComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getQuery")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h2",{attrs:{id:"附录"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#附录"}},[t._v("#")]),t._v(" 附录")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://jex.im/regulex/#!flags=&re=%5E(a%7Cb)*%3F%24",target:"_blank",rel:"noopener noreferrer"}},[t._v("正则可视化工具"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://regex101.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("正则在线测试工具(regex101)"),n("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);